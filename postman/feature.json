{
  "info": {
    "_postman_id": "",
    "name": "Comments",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": ""
  },
  "item": [
    {
      "name": "Pre-tests",
      "item": [
        {
          "name": "Создание 1 пользователя",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "const response = pm.response.json();\r",
                  "pm.collectionVariables.set('userId1', response.id);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"user@mmail.ru\",\r\n  \"name\": \"User\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "localhost:8080/admin/users",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Создание 2 пользователя",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "const response = pm.response.json();\r",
                  "pm.collectionVariables.set('userId2', response.id);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"user2@mail.ru\",\r\n  \"name\": \"User 2\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "localhost:8080/admin/users",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Создание 3 пользователя",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "const response = pm.response.json();\r",
                  "pm.collectionVariables.set('userId3', response.id);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"user3@mail.ru\",\r\n  \"name\": \"User3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "localhost:8080/admin/users",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Создание категории",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "const response = pm.response.json();\r",
                  "pm.collectionVariables.set('categoryId', response.id);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"События на свежем воздухе\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "localhost:8080/admin/categories",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "categories"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Создание события",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "const response = pm.response.json();\r",
                  "pm.collectionVariables.set('eventId', response.id);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"annotation\": \"Концерт на свежем воздухе\",\r\n  \"category\": {{categoryId}},\r\n  \"description\": \"Концерт на свежем воздухе\",\r\n  \"eventDate\": \"2024-10-10 22:01:00\",\r\n  \"location\": {\r\n    \"lat\": 33.333,\r\n    \"lon\": 11.111\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 10,\r\n  \"requestModeration\": false,\r\n  \"title\": \"Концерт\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "localhost:8080/users/{{userId1}}/events",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "{{userId1}}",
                "events"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Публикация события",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "const response = pm.response.json();\r",
                  "pm.collectionVariables.set('requestId', response.id);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "localhost:8080/admin/events/{{eventId}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "events",
                "{{eventId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Создание заявки на участие в событии 2 пользователем",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "const response = pm.response.json();\r",
                  "pm.collectionVariables.set('requestId1', response.id);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "localhost:8080/users/{{userId2}}/requests?eventId={{eventId}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "{{userId2}}",
                "requests?eventId={{eventId}}"
              ],
              "variable": [
								{
									"key": "eventId",
									"value": "{{eventId}}"
								}
							]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Comment tests",
      "item": [
        {
          "name": "Создание комментария 2 пользователем",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('requestBody', JSON.stringify(pm.request.body));\r",
                  "\r",
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.collectionVariables.get('requestBody'));\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Комментарий должен содержать поля: id, commentator, event, comment, createdDate\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('commentator');\r",
                  "pm.expect(target).to.have.property('event');\r",
                  "pm.expect(target).to.have.property('comment');\r",
                  "pm.expect(target).to.have.property('createdDate');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Ответ должен соответствовать данным в запросе\", function () {\r",
                  "    pm.expect(source.comment).equal(JSON.stringify(target).comment, 'Красивая музыка');\r",
                  "});\r",
                  "const response = pm.response.json();\r",
                  "pm.collectionVariables.set('commentId1', response.id);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"comment\": \"Красивая музыка\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "localhost:8080/comments/{{userId2}}/events/{{eventId}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments",
                "{{userId2}}",
                "events",
                "{{eventId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление комментария к своему событию 1 пользователем",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('requestBody', JSON.stringify(pm.request.body));\r",
                  "\r",
                  "pm.test(\"Status code is 409\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(409);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"comment\": \"Cooooooomeeeeent!\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "localhost:8080/comments/{{userId1}}/events/{{eventId}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments",
                "{{userId1}}",
                "events",
                "{{eventId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление комментария к событию, в котором не участвовал 3 пользователь",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('requestBody', JSON.stringify(pm.request.body));\r",
                  "\r",
                  "pm.test(\"Status code is 409\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(409);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"comment\": \"Cooooooomeeeeent!\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "localhost:8080/comments/{{userId1}}/events/{{eventId}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments",
                "{{userId1}}",
                "events",
                "{{eventId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Создание заявки на участие 3 пользователя во событии",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "const response = pm.response.json();\r",
                  "pm.collectionVariables.set('requestId2', response.id);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "localhost:8080/users/{{userId3}}/requests?eventId={{eventId}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "{{userId3}}",
                "requests?eventId={{eventId}}"
              ],
              "variable": [
								{
									"key": "eventId",
									"value": "{{eventId}}"
								}
							]
            }
          },
          "response": []
        },
        {
          "name": "Создание комментария 3 пользователем",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('requestBody', JSON.stringify(pm.request.body));\r",
                  "\r",
                  "pm.test(\"Status code is 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.collectionVariables.get('requestBody'));\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Комментарий должен содержать поля: id, commentator, event, comment, createdDate, eventDate\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('commentator');\r",
                  "pm.expect(target).to.have.property('event');\r",
                  "pm.expect(target).to.have.property('comment');\r",
                  "pm.expect(target).to.have.property('createdDate');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Ответ должен соответствовать данным в запросе\", function () {\r",
                  "    pm.expect(source.comment).equal(JSON.stringify(target).comment, 'Очень интересный концерт');\r",
                  "});\r",
                  "const response = pm.response.json();\r",
                  "pm.collectionVariables.set('commentId2', response.id);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"comment\": \"Очень интересный концерт\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "localhost:8080/comments/{{userId3}}/events/{{eventId}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments",
                "{{userId3}}",
                "events",
                "{{eventId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение комментария по id пользователя",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.be.ok;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Размер ответа должен быть 1\", function () {\r",
                  "    pm.expect(response.length).to.equal(1);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "localhost:8080/comments?commentatorId={{userId3}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments?commentatorId={{userId3}}"
              ],
              "variable": [
								{
									"key": "commentatorId",
									"value": "{{userId3}}"
								}
							]
            }
          },
          "response": []
        },
        {
          "name": "Получение комментариев по id события",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.be.ok;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Размер ответа должен быть 2\", function () {\r",
                  "    pm.expect(response.length).to.equal(2);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "localhost:8080/comments?eventId={{eventId}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments?eventId={{eventId}}"
              ],
              "variable": [
								{
									"key": "eventId",
									"value": "{{eventId}}"
								}
							]
            }
          },
          "response": []
        },
        {
          "name": "Получение комментария по id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {\r",
                  "    pm.response.to.be.ok;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response have body\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "\r",
                  "pm.test(\"Ответ должен содержать определенный комментарий\", function () {\r",
                  "    pm.expect(response).to.have.property(\"comment\");\r",
                    "    pm.expect(response.comment).eq('Красивая музыка')\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "localhost:8080/comments/{{commentId1}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments",
                "{{commentId1}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Удаление не существующего комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('requestBody', JSON.stringify(pm.request.body));\r",
                  "\r",
                  "pm.test(\"Status code is 404\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(404);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "localhost:8080/comments/{{userId3}}/1001",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments",
                "{{userId3}}",
                "1001"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Удаление комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('requestBody', JSON.stringify(pm.request.body));\r",
                  "\r",
                  "pm.test(\"Status code is 204\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(204);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "localhost:8080/comments/{{userId2}}/{{commentId1}}",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments",
                "{{userId2}}",
                "{{commentId1}}"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ]
}